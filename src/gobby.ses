!obby
session version="0.4.7"
 user_table
  user colour="c7befd" id="1" name="anx"
  user colour="a509" id="2" name="flyc0r"
 chat
  system_message text="anx hat die Sitzung betreten" timestamp="1369158220"
  system_message text="anx has created a new document: index.html" timestamp="1369158237"
  system_message text="flyc0r hat die Sitzung betreten" timestamp="1369158252"
  system_message text="anx has created a new document: api.coffee" timestamp="1369158294"
  system_message text="anx has created a new document: rpgboard.coffee" timestamp="1369158294"
  system_message text="anx has created a new document: server.coffee" timestamp="1369158294"
  system_message text="anx has created a new document: rpgb.css" timestamp="1369158303"
 document encoding="UTF-8" id="1" owner="1" suffix="1" title="index.html"
  chunk author="0" content="<!DOCTYPE html>\n<html><head><title>rpgboard</title>\n <meta charset=\"utf-8\" />\n <!--<meta http-equiv=\"refresh\" content=\"8\" URL=\"http://192.168.43.8:8080\" />-->\n <link href='http://fonts.googleapis.com/css?family=Milonga' rel='stylesheet' type='text/css'>\n <link rel=\"stylesheet\" type=\"text/css\" href=\"css/rpgb.css\" />\n <script src=\"js/jquery.js\"></script>\n <script src=\"js/jquery-ui.js\"></script>\n <script src=\"js/api.js\"></script>\n <script src=\"js/rpgboard.js\"></script>\n <script type=\"text/javascript\">\n \t$(document).ready(function(){\n \t\t$(\"#csel\").on('change',function() { $('*').css('color',this.value,'border-color',this.value); }) \n \t})\n </script>\n </head>\n <body>\n  <div id=\"constrainer\">\n    <div id=\"head\">\n     <h1>Space Ace 5000</h1>\n     <span id=\"subtitle\"><em>...to boldly go without a plan.</em></span>\n     <div class=\"infobar\">s01e05 \"Ingenious Inventions\", Ingame Datum: 23.5.2013 <input type=\"color\" id=\"csel\" value=\"#00FF00\" /></div>\n     <div id=\"gm\">brought to you by anx</div>\n    </div>\n    <div id=\"chars\" class=\"wg\"><h2>chars</h2>\n     <span><span class=\"charbox\"><input type=\"number\" value=\"0\" /></span><img src=\"img/chars/zottle.png\" /><br /><h3>Zotak \"Zottle\" Kryy'Apak</h3><div class=\"player\">(randolf)</div></span>\n     <span>\n      <img src=\"img/chars/klick.png\" /><br /><h3>Klickrox</h3><div class=\"player\">(kdog)</div>\n            <span class=\"charbox\">\n       <input type=\"number\" value=\"0\" /><br />\n       <strong>PHY:3<br />\n       SOC:4<br />\n       PSY:5<br />\n       INT:2<br /></strong>\n       <h4>Feats</h4>\n       <ul>\n        <li>Spinnenl&auml;fer</li>\n        <li>I know a guy</li>\n       </ul>\n       <h4>Probleme</h4>\n       <ul>\n        <li>Narbe</li>\n        <li>Analphabet</li>\n       </ul>\n      </span>\n     </span>\n     <span><span class=\"charbox\"><input type=\"number\" value=\"0\" /></span><img src=\"img/chars/pix.png\" /><br /><h3>Pix Blank</h3><div class=\"player\">(randolf)</div></span>\n     <span><span class=\"charbox\"><input type=\"number\" value=\"0\" /></span><img src=\"img/chars/gentle.png\" /><br /><h3>Ed \"Gentle\" Palmer</h3><div class=\"player\">(fly)</div></span>\n    </div>\n    <div id=\"dice\" class=\"wg\"><h2>dice</h2><ul></ul></div>\n    <div id=\"wgl\"><h2>log</h2><div \"#logframe\"><ul id=\"log\"></ul></div></div>\n    <div id=\"npc\" class=\"wg\"><h2>npcs</h2></div>\n    <div style=\"clear:both;\"></div>\n    <div id=\"notice\"></div>\n    <div id=\"chat\">\n      <div id=\"toolbar\"></div>\n      <input type=\"text\" id=\"chatinput\" />\n    </div>\n    <div id=\"settings\"></div>\n  </div>\n</body>\n</html>"
 document encoding="UTF-8" id="2" owner="1" suffix="1" title="api.coffee"
  chunk author="0" content="class RPGApi\n  rules : {}\n\n  dialog : (opts) ->\n    Api.lastItemId = 0 unless Api.lastItemId?\n    id = Api.lastItemId++\n    co = $(\"body\")\n    ctx = {}\n    co.append \"\"\"<div class=\"barrier\"></div>\"\"\"\n    ctx.ba = co.find(\"> .barrier\").last()\n    co.append opts.src\n    ctx.frame = co.find(\"> *\").last()\n    ctx.frame.attr(\"id\",id)\n    ctx.frame.addClass \"wg\"\n    ctx.destroy = ->\n      ctx.frame.replaceWith \"\"\n      ctx.ba.replaceWith \"\"\n    ctx.frame.find(\".close\").on \"click\", -> ctx.destroy()\n    opts.init.call ctx\n\n  notice : (text,time) ->\n    Api.notice.time = if time? then time else 1\n    notice = $(\"#notice\")\n    notice.css(\"display\",\"block\")\n    notice.html(text)\n    notice.effect(\"highlight\", {color:\"#0F0\"}, 100)\n    Api.notice.timeout = Date.now()/1000\n    unless Api.notice.check?\n      Api.notice.check = setInterval ->\n          if Api.notice.timeout + Api.notice.time < Date.now() / 1000\n            clearInterval Api.notice.check\n            delete Api.notice['check']\n            notice.fadeOut .2\n        ,100\n\n  log : (key, value, time)->\n    Api.notice(\"<span>#{key}</span> <b>#{value}</b>\",time) if time?\n    log = $(\"#log\")\n    log.append \"\"\"<li><span>#{key}</span> <b>#{value}</b></li>\"\"\"\n    log.animate({ scrollTop: log.height() }, \"fast\");\n\n  register : (opts={},p) =>\n    p = @rules unless p?\n    for k,v of opts\n      rule = p[k]\n      if not rule? then p[k] = v\n      else\n        if typeof rule is \"function\" then p[k] = [rule,v]\n        else if rule.length? then rule.push v\n        else @register v,rule\n\n  route : (message,rule) =>\n    rule = @rules unless rule?\n    for k,v of message\n      if rule[k]?\n        if typeof rule[k] is \"function\"\n          console.log \"api:call\", k\n          rule[k].call(null,v)\n        else if rule[k].length?\n          for r in rule[k]\n            console.log \"api:call\",k,v\n            r.call(null,v)\n        else\n          console.log \"+\",k\n          @route v,rule[k]\n      else console.log \"api:unbound\", k\n\n  login: (user,pass,callback) ->\n    $.ajax\n      type : 'POST'\n      url : config.wiki\n      headers : \"Content-Type\": \"application/json\"\n      data :\n        JSON.stringify\n          jsonrpc: \"2.0\"\n          id: \"123\"\n          method:\n            methodName: \"dokuwiki.login\"\n          params : [\n            {string : user},\n            {string : pass}]\n      success: (e)-> callback(e.result)\n      error :  (e)-> callback(false)\n\n  get : (path, callback) ->\n    $.ajax\n      type : 'POST'\n      url : config.wiki\n      headers : \"Content-Type\": \"application/json\"\n      data :\n        JSON.stringify\n          jsonrpc: \"2.0\"\n          id: \"123\"\n          method:\n            methodName: \"wiki.getPage\"\n          params : [ string : config.root + \":\" + path ]\n      success: (e)-> callback(e.result)\n      error :  (e)-> callback(false)\n\n  list : (path, callback) ->\n    $.ajax\n      type : 'POST'\n      url : config.wiki\n      headers : \"Content-Type\": \"application/json\"\n      data :\n        JSON.stringify\n          jsonrpc: \"2.0\"\n          id: \"123\"\n          method:\n            methodName: \"dokuwiki.getPagelist\"\n          params : [\n            {string : config.root + ( if path? then \":\" + path else '' )},\n            {struct : [{depth : 1 }]}]\n      success: (e)-> callback(e.result)\n      error :  (e)-> callback(false)\n\n  constructor : (@address,@service) ->\n  send : (m) =>\n    m.name = Api.name unless m.name?\n    Api.socket.send JSON.stringify m\n  connect: =>\n    console.log \"connecting to: \" + @address\n    @socket  = new WebSocket(@address,@service)    if WebSocket?\n    @socket  = new MozWebSocket(@address,@service) if MozWebSocket?\n    @socket.message   = (m) -> @send JSON.stringify m\n    @socket.onerror   = (e) ->\n      console.log \"sock:error #{e}\"\n      setTimeout @connect, 1000\n    @socket.onopen    = (s) ->\n      console.log \"sock:connected\"\n    @socket.onmessage = (m) =>\n      try\n        m = JSON.parse(m.data)\n        @route.ctx = \n          name : if m.name? then m.name else \"RPG\"\n          message : m\n        delete m['name']\n        @route(m)\n      catch e\n        return console.log {}, e, m\n\nwindow.Api = new RPGApi()\n\n$(document).ready ->\n  Api.name = \"rpg\"\n  Api.register\n    msg  : (m) -> Api.log Api.route.ctx.name, m.text, 3\n    dice : (m) -> Api.log Api.route.ctx.name + ' ' + m.eyes, m.result, 2\n  $.ajax\n    url : \"etc/config.json\"\n    success : (d) ->\n      console.log d\n      Api.address = \"ws://\" + window.location.toString()\n          .replace(\"https://\",\"\")\n          .replace(\"http://\",\"\")\n          .replace(/\\/.*$/,'')\n          .replace(/:[0-9]+$/,'') + ':' +\n        (parseInt(d.port)+1)\n      Api.connect()"
 document encoding="UTF-8" id="3" owner="1" suffix="1" title="rpgboard.coffee"
  chunk author="0" content="config =\n  root : \"rpg:kampagnen\"\n  wiki : \"http://wiki.ulzq.de/lib/plugins/jsonrpc/jsonrpc.php\"\n  default : \"Space_2013\"\n\nclass Die\n  constructor : (@eyes) ->\n    $(\"#dice ul\").append(\"\"\"\n      <li><button title=\"Roll a D#{@eyes}\" class=\"d#{@eyes}\"></button><input type=\"number\" value=\"1\" min=\"1\" max=\"5\" /><span></span></li>\n    \"\"\")\n    @me = $('#dice > ul > li').last()\n    @btn = @me.find(\"button\")\n    @amt = @me.find(\"input\")\n    @res = @me.find(\"span\")\n    @btn.on 'click', =>\n      amt = @amt.val()\n      a = []\n      r = 0\n      for i in [0 ... amt ]\n        b = Math.ceil Math.random() * @eyes\n        a.push b\n        r += b\n      mx = amt*@eyes\n      ai = a.join(\", \")\n      if amt > 2 then ai += \" =#{r}/#{amt*@eyes}\"\n      ai += ' = ' + (Math.round r / mx * 100) + \"%\"\n      @res.html ai\n      $(\"#dice li span\").removeClass(\"rolled\")\n      @res.addClass(\"rolled\")\n      dc = if amt < 2 then 'D'+@eyes else amt+\"D\"+@eyes\n      unless Api.send { dice : { eyes : dc, vals : a, result : ai } }\n        Api.log dc, result, 5\n\nclass ToolButton\n  constructor : (opts) ->\n    {@name,@image,@title,@tooltip,@click} = opts\n    @image = @name unless @image?\n    @title = @name unless @title?\n    @tooltip = @name unless @tooltip?\n    $(\"#toolbar\").append(\"\"\"\n      <button title=\"#{@title}\"><img src=\"img/#{@image}.svg\" />#{@title}</button>\n    \"\"\")\n    $('#toolbar > button').last().click @click\n\n$(document).ready ->\n  new Die(i) for i in [4,6,8,10,12,20,100]\n\n  new ToolButton\n    name : \"map\"\n    click : -> alert \"please dont press this button again\"\n\n  new ToolButton\n    name  : \"login\"\n    image : \"key\"\n    click : ->\n      Api.list \"\", (campaigns)->\n        camps = ( \"<option>#{c}</option>\" for c in campaigns )\n        Api.dialog\n          src : \"\"\"\n            <div class=\"dialog\" id=\"#{@id}\">\n              <h2>login</h2>\n              <button class=\"close\">X</button>\n              <label>Campaign</label><select>#{camps}</select>\n              <label>User</label><input  type=\"text\" class=\"name\" />\n              <label>Password</label><input  type=\"password\" class=\"password\" />\n            </div>\"\"\"\n          init : ->\n            @name = @frame.find(\".name\")\n            @pass = @frame.find(\".password\")\n            @name.focus()\n            @name.on \"keydown\", (e)=> if e.keyCode is 13 then @pass.focus()\n            @pass.on \"keydown\", (e)=>\n              if e.keyCode is 13\n                user = @name.val(); pass = @pass.val();\n                Api.login user, pass, (result) =>\n                  if result\n                    Api.log \"login as\", user, 2\n                    Api.name = user \n                    @destroy()\n                  else\n                    @name.focus()\n                    @name.effect(\"highlight\",{},250)\n                    @pass.effect(\"highlight\",{},250)\n\n  new ToolButton\n    name  : \"settings\"\n    image : \"prefs\"\n    click : -> alert \"please dont press this button again, 4 real\"\n\n  new ToolButton\n    name  : \"log\"\n    click : ->\n      log = $(\"#wgl\")\n      log.css(\"display\",if log.css(\"display\") is \"none\" then \"block\" else \"none\")\n  \n  $(\"button\").each (i,b) ->\n    b = $(b)\n    b.on \"mouseover\", -> Api.notice b.attr(\"title\")\n  \n  chat = $(\"#chatinput\")\n  chat.on \"keydown\", (e) ->\n    if e.keyCode is 13\n      Api.send msg :\n        text : chat.val()\n      chat.val ''"
 document encoding="UTF-8" id="4" owner="1" suffix="1" title="server.coffee"
  chunk author="0" content="path = require 'path'\nfs = require 'fs'\nexpress = require 'express'\nWebSocketServer = require('ws').Server\n\nconfig = http : on, port : 33451\n\ncfgpath = path.dirname(__dirname)+'/etc/config.json'\nif fs.existsSync cfgpath\n  console.log \"RPGBoard 0.0.1 - CONF - \" + cfgpath\n  config = JSON.parse fs.readFileSync cfgpath\n\nconfig.root = path.dirname(__dirname)\n\nif config.http\n  console.log \"RPGBoard 0.0.1 - HTTP - #{config.port} #{config.root}\"\n  app = express()\n  app.use express.compress()\n  app.listen config.port\n  app.use \"/\", express.static(config.root)\n\nconsole.log \"RPGBoard 0.0.1 - WEBS - #{config.port+1}\"\nclass MicroWSS extends WebSocketServer\n  @connid : 0\n  @conns : {}\n  @there : (ws) -> MicroWSS.conns[ws.id] = ws\n  @gone  : (id) -> delete MicroWSS.conns[id]\n  constructor : (opts) ->\n    super opts\n    @on \"connection\", (ws) ->\n      ws.id = MicroWSS.connid++\n      ws.login = false\n      ws.message = (m) -> ws.send JSON.stringify(m)\n      ws.on \"end\",   -> MicroWSS.gone ws\n      ws.on \"error\", -> MicroWSS.gone ws\n      ws.on \"message\", (m) ->\n        for id, sock of MicroWSS.conns\n          try\n            sock.send m\n          catch e\n            MicroWSS.gone id\n      MicroWSS.there ws\n\nnew MicroWSS port : config.port + 1"
 document encoding="UTF-8" id="5" owner="1" suffix="1" title="rpgb.css"
  chunk author="0" content="* { color:green; border-color:green; font-family:sans-serif;}\n* a { color:green; text-decoration:underline;}\n* a:hover { color:green; }\n@font-face {\n        font-family: 'glass_tty_vt220medium';\n        src: url('../fonts/glass_tty_vt220-webfont.eot');\n        src: url('../fonts/glass_tty_vt220-webfont.eot?#iefix') format('embedded-opentype'),\n             url('../fonts/glass_tty_vt220-webfont.woff') format('woff'),\n             url('../fonts/glass_tty_vt220-webfont.ttf') format('truetype'),\n             url('../fonts/glass_tty_vt220-webfont.svg#glass_tty_vt220medium') format('svg');\n        font-weight: normal;\n        font-style: normal; }\nh1, h2, h3, h4, h5, h6 { margin-bottom:0;margin-top: 0;font-family:'glass_tty_vt220medium',cursive!important;}\n\na{color:#0f0;}\na:hover{text-decoration:none;}\nbody{background:#000 url(../img/bg/earth.jpg) no-repeat center fixed; }\nbutton,input{background:#000;border:1px solid;width:40px;}\nbutton:active{border:1px dashed;}\nh1{font-family:sans-serif;font-variant:small-caps;margin-bottom:0;margin-top:5px;text-align:center; font-size:xx-large;}\nh2{font-family:sans-serif;font-variant:small-caps; font-weight:bold;}\nh3,h2{text-align:center;font-size:x-large;}\nul{list-style-type:none;margin:0;padding:0;}\n\n#chars > span {float:left;border:1px dotted;margin-left:.5%; font-size:small;margin-bottom:1%;max-height:60%;position:relative;width:49%;}\n#chars span .charbox { text-align:right; position:absolute; top:0px;right:0px; padding-top:10px; }\n#chars span .charbox input {position:absolute; top:0px; right:0px; margin-bottom:15px;}\n#chars span img{width:46%;}\n#chars span input{float:right;position:absolute;right:25px;top:0;}\n#chars .player { text-align:right; }\n#constrainer {position:absolute;top:2px;bottom:2px;left:2px;right:2px;overflow:hidden;}\n#dialog{bottom:2px;display:none;left:2px;position:absolute;right:2px;top:2px;}\n#dice .rolled{color:yellow;}\n#dice li > *{margin-left:2px;}\n#dice li input,#dice li button{width:40px;}\n#dice li span{margin-left:2%;}\n#gm{font-size:small;margin-bottom:1%;margin-right:1%;text-align:right;}\n#head{border:3px solid;width:80%; margin: 0 auto; background:#000;opacity:.8;text-align:center;border-radius: 20px; margin-bottom:1%;}\n#log li > span, #notice span {color:#FF0;display:inline-block;min-width:20px;}\n#logframe{bottom:2px;left:2px;overflow:auto;position:absolute;right:2px;top:10px;}\n#subtitle{font-variant:'italic';margin:0;}\n.wg{\n  border-radius: 20px;\n  background:#000; opacity:.8;border:3px solid;float:left;margin-bottom:1%;margin-left:.5%;width:49%;}\n.wg h3{font-size:large;}\n.wg,#wgl{opacity:.8;}\n#wgl { display:none; }\n#notice {\n  display: none;\n  position: fixed; top: 5px; left: 5px; right:5px;\n  background: black; opacity: .8;\n  border: 3px solid;\n  padding: 10px 20px;\n  color: green;\n  border-radius: 20px;\n  font: bold 14px \"Helvetica Neue\", Sans-Serif;\n  text-transform: uppercase; }\n\n#chat {position: absolute; bottom: 2px; left: .5%; right: .5%; height: 50px; }\n#toolbar{text-align:right;}\n#chatinput { display: block; position: absolute; top: 4px; left: 0px; bottom: 2px; right: 180px; width: auto }\n#toolbar span{display:none;}\n#wgl{\n  background:#000; opacity:.8; border:1px solid;\n  font-size:xx-small;min-height:20%;position:absolute;right:2px;top:4%;width:18%; }\n\n#dice button { border: none; padding: 0; width: 32px; height: 32px; background-repeat: no-repeat }\n#dice .d4   { background-image: url(../img/dice/d4.svg) }\n#dice .d6   { background-image: url(../img/dice/d6.svg) }\n#dice .d8   { background-image: url(../img/dice/d8.svg) }\n#dice .d10  { background-image: url(../img/dice/d10.svg) }\n#dice .d12  { background-image: url(../img/dice/d12.svg) }\n#dice .d20  { background-image: url(../img/dice/d20.svg) }\n#dice .d100 { background-image: url(../img/dice/d100.svg) }\n\n.unselectable {\n  -moz-user-select: -moz-none;\n  -khtml-user-select: none;\n  -webkit-user-select: none;\n  -o-user-select: none;\n  user-select: none;}\n\n.barrier {\n  position: fixed; top:0px;left:0px;right:0px;bottom:0px;\n  background: black; opacity: .8;}\n\n.dialog {\n  padding: 20px;\n  display: block;\n  position: fixed;\n  top: 5%;\n  left: 5%; right: 5%; }\n\n.dialog label {\n  width: 33%;\n  display: block;\n  position: absolute; }\n\n.dialog input,\n.dialog select {\n  width: 65%; display: block; margin-left: 34%; }\n\n.dialog .close { position: absolute; top: 0px; right: 0px; }\n"